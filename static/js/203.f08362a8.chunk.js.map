{"version":3,"file":"static/js/203.f08362a8.chunk.js","mappings":"qOACA,EAA2B,6BAA3B,EAA+D,yBAA/D,EAAgG,0BAAhG,EAAkI,0BAAlI,EAAqK,2B,SCmFrK,MA/EA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACHC,EAAQO,GACR,MACF,IAAK,QACHL,EAASK,GACT,MACF,IAAK,WACHH,EAAYG,GACZ,MACF,QACE,SAaN,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAQC,SAXR,SAACC,GACpBA,EAAIC,iBACJhB,EAASiB,EAAAA,EAAAA,SAAwB,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAEhDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAKuCU,aAAa,MAA9D,WACE,sCACA,mBAAON,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXM,KAAK,OACLhB,KAAK,OACLQ,MAAOR,EACPiB,UAAQ,EACRC,SAAUZ,QAId,mBAAOG,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXM,KAAK,QACLhB,KAAK,QACLQ,MAAON,EACPe,UAAQ,EACRC,SAAUZ,QAId,mBAAOG,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXM,KAAK,WACLhB,KAAK,WACLQ,MAAOJ,EACPa,UAAQ,EACRC,SAAUZ,QAId,mBAAQG,UAAWC,EAAUM,KAAK,SAAlC","sources":["webpack://goit-react-hw-08-phonebook/./src/views/SignUpView/SignUpView.module.css?1d78","views/SignUpView/SignUpView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authView\":\"SignUpView_authView__mqaB2\",\"form\":\"SignUpView_form__-P+wx\",\"label\":\"SignUpView_label__iIgZa\",\"input\":\"SignUpView_input__SLsF7\",\"button\":\"SignUpView_button__vbUqP\"};","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport s from \"./SignUpView.module.css\";\n\nfunction SignUpView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div className={s.authView}>\n      <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <h2> Sign Up</h2>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={s.label}>\n          Email\n          <input\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={s.label}>\n          Password\n          <input\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUpView;\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","className","s","onSubmit","evt","preventDefault","authOperations","autoComplete","type","required","onChange"],"sourceRoot":""}