{"version":3,"file":"static/js/610.71c38c19.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/views/PhonebookView/phonebookView.module.css?093d","views/PhonebookView/PhonebookView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapForm\":\"ContactForm_wrapForm__tdqPu\",\"lableForm\":\"ContactForm_lableForm__XeNU5\",\"addButton\":\"ContactForm_addButton__zGNsx\"};","import { useState } from \"react\";\nimport {\n  useGetContactsQuery,\n  useCreateContactMutation,\n} from \"../../redux/slice\";\nimport { toast } from \"react-toastify\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const { data: contacts } = useGetContactsQuery();\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const changeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleChange = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = { name, number };\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      toast.info(`${name} is already in contacts`); //\n      return;\n    }\n    if (\n      contacts.find(\n        (contact) => contact.number.toLowerCase() === number.toLowerCase()\n      )\n    ) {\n      toast.info(`${number} is already in contacts`); //\n      return;\n    }\n    createContact(data);\n    reset();\n    toast.success(`New contact added to phonebook`); //\n  };\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.wrapForm} onSubmit={handleSubmit}>\n      <label className={s.lableForm}>Name</label>\n\n      <input\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={changeName}\n      />\n      <label className={s.lableForm}>Number</label>\n\n      <input\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n      />\n      <button className={s.addButton} type=\"submit\" disabled={isLoading}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"ContactItem_text__6hT0E\",\"contactBtn\":\"ContactItem_contactBtn__nMiN-\"};","import React from \"react\";\nimport { useDeleteContactMutation } from \"../../redux/slice\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactItem.module.css\";\n\nfunction ContactItem({ id, name, number }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  return (\n    <>\n      <p className={s.text}>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n        className={s.contactBtn}\n        onClick={() => {\n          deleteContact(id);\n          toast.error(\"Contact has been deleted\");\n        }}\n        disabled={isDeleting}\n      >\n        Delete\n      </button>\n    </>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useGetContactsQuery } from \"../../redux/slice\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport Loader from \"../Loader/Loader\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList() {\n  const filter = useSelector((state) => state.filter.filter);\n  const { data, isFetching } = useGetContactsQuery();\n\n  const visibleContacts = data?.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {isFetching && <Loader />}\n\n      <ul className={s.list}>\n        {visibleContacts?.map(({ id, name, number }) => (\n          <li key={id} className={s.item}>\n            <ContactItem id={id} name={name} number={number} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\",\"input\":\"Filter_input__N7T3z\",\"text\":\"Filter_text__uqQRu\"};","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { contactsFilter } from \"../../redux/FilterSlice\";\nimport Loader from \"../Loader/Loader\";\nimport { useGetContactsQuery } from \"../../redux/slice\";\n\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const { data, isFetching } = useGetContactsQuery(null, {\n    refetchOnMountOrArgChange: true,\n  });\n  const changeFilter = (e) => {\n    dispatch(contactsFilter(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {data && data.length !== 0 ? (\n        <>\n          <label className={s.wrapper}>\n            Find contacts by name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"filter\"\n              onChange={changeFilter}\n            />\n          </label>\n        </>\n      ) : (\n        <p className={s.text}> You have no saved contacts yet. </p>\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"phonebookView_phonebook__koe89\",\"form\":\"phonebookView_form__mAUq6\"};","import ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport s from './phonebookView.module.css';\n\nexport default function Phonebook() {\n  return (\n    <div className={s.phonebook}>\n      <div className={s.form}>\n        <h2>Add new contact</h2>\n        <ContactForm />\n      </div>\n      <div>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n"],"names":["useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","useCreateContactMutation","createContact","isLoading","reset","className","s","onSubmit","e","preventDefault","find","contact","toLowerCase","toast","value","type","pattern","title","required","onChange","target","disabled","id","useDeleteContactMutation","deleteContact","isDeleting","onClick","filter","useSelector","state","isFetching","visibleContacts","includes","Loader","map","dispatch","useDispatch","refetchOnMountOrArgChange","length","contactsFilter","currentTarget","Phonebook"],"sourceRoot":""}