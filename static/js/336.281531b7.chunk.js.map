{"version":3,"file":"static/js/336.281531b7.chunk.js","mappings":"qOACA,EAA2B,4BAA3B,EAA8D,wBAA9D,EAA8F,yBAA9F,EAA+H,yBAA/H,EAAiK,0B,SCIlJ,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACHL,EAASM,GACT,MACF,IAAK,WACHJ,EAAYI,GACZ,MACF,QACE,SAWN,OACE,+BACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAQC,SAVV,SAACC,GACpBA,EAAEC,iBACFf,EAASgB,EAAAA,EAAAA,MAAqB,CAAEb,MAAAA,EAAOE,SAAAA,KAEvCD,EAAS,IACTE,EAAY,KAKyCW,aAAa,MAA9D,WACE,qCACA,mBAAON,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXM,KAAK,QACLT,KAAK,QACLC,MAAOP,EACPgB,UAAQ,EACRC,SAAUb,QAId,mBAAOI,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXM,KAAK,WACLT,KAAK,WACLC,MAAOL,EACPc,UAAQ,EACRC,SAAUb,QAId,mBAAQI,UAAWC,EAAUM,KAAK,SAAlC","sources":["webpack://goit-react-hw-08-phonebook/./src/views/LogInView/LogInView.module.css?d6ee","views/LogInView/LogInView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authView\":\"LogInView_authView__LO1yC\",\"form\":\"LogInView_form__1V3ky\",\"label\":\"LogInView_label__q9uO+\",\"input\":\"LogInView_input__3+3pd\",\"button\":\"LogInView_button__HXZ4Z\"};","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport s from \"./LogInView.module.css\";\n\nexport default function LogInView() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  return (\n    <>\n      <div className={s.authView}>\n        <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\n          <h2> Log In</h2>\n          <label className={s.label}>\n            Email\n            <input\n              className={s.input}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              required\n              onChange={handleChange}\n            />\n          </label>\n\n          <label className={s.label}>\n            Password\n            <input\n              className={s.input}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              required\n              onChange={handleChange}\n            />\n          </label>\n\n          <button className={s.button} type=\"submit\">\n            Log in\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n"],"names":["LogInView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","s","onSubmit","e","preventDefault","authOperations","autoComplete","type","required","onChange"],"sourceRoot":""}